services:
  postgres:
    build:
      context: .
      dockerfile: postgres/Dockerfile-postgis
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/custom-config/postgresql.conf:ro

  app:
    container_name: app
    command: gunicorn -k uvicorn.workers.UvicornWorker -w 4 -b 0.0.0.0:8001 --worker-connections 1000 --keep-alive 10 src.main.web:app
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://0.0.0.0:${APP_BACKEND_PORT}/health/" ]
      interval: 10s
      timeout: 5s
      retries: 5
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - .:/app
    ports:
      - 8001:8001
    depends_on:
      - postgres
      - rabbitmq
      - redis

  celery_worker:
    container_name: celery_worker
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python -m celery -A celery_tasks.main worker --pool=solo --loglevel=info -E
    volumes:
      - .:/src
    depends_on:
      - rabbitmq
      - redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}

  celery_beat:
    container_name: celery_beat
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python -m celery -A celery_tasks.main beat --loglevel=info
    volumes:
      - .:/src
    depends_on:
      - rabbitmq
      - redis
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

  flower:
    container_name: flower
    image: mher/flower:latest
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: always
    env_file: .env
    ports:
      - "5555:5555"
    command: celery --broker=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672// -A celery_tasks.main flower --port=5555
    depends_on:
      - rabbitmq
      - celery_worker

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - app

  redis:
    image: redis:7.4
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_PORT}:5672
      - "15672:15672"

volumes:
  postgres-data:
  redis-data:
