"""initial schema

Revision ID: 0aaeae15442c
Revises:
Create Date: 2025-09-19 09:19:31.070729

"""

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0aaeae15442c"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("ADMIN", "EDITOR", "VIEWER", name="userrole").create(op.get_bind())
    op.create_table(
        "users",
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("username", sa.String(length=60), nullable=False),
        sa.Column("phone_number", sa.String(length=20), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column(
            "role",
            postgresql.ENUM(
                "ADMIN", "EDITOR", "VIEWER", name="userrole", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
    )
    op.create_index(op.f("ix_users_is_deleted"), "users", ["is_deleted"], unique=False)
    op.create_index(
        "uq_users_email_active_not_deleted",
        "users",
        ["email"],
        unique=True,
        postgresql_where=sa.text("is_deleted = false"),
    )
    op.create_index(
        "uq_users_username_not_deleted",
        "users",
        ["username"],
        unique=True,
        postgresql_where=sa.text("is_deleted = false"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "uq_users_username_not_deleted",
        table_name="users",
        postgresql_where=sa.text("is_deleted = false"),
    )
    op.drop_index(
        "uq_users_email_active_not_deleted",
        table_name="users",
        postgresql_where=sa.text("is_deleted = false"),
    )
    op.drop_index(op.f("ix_users_is_deleted"), table_name="users")
    op.drop_table("users")
    sa.Enum("ADMIN", "EDITOR", "VIEWER", name="userrole").drop(op.get_bind())
    # ### end Alembic commands ###
